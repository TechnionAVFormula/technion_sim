# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: server.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='server.proto',
  package='TechnionFormulaAV.Messages',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0cserver.proto\x12\x1aTechnionFormulaAV.Messages\x1a\x0c\x63ommon.proto\"\r\n\x0b\x45xitMessage\"\x14\n\x12\x43onnectionApproved\"\x0f\n\rSwitchToASOff\"H\n\x10SwitchToASDReady\x12\x34\n\x07mission\x18\x01 \x01(\x0e\x32#.TechnionFormulaAV.Messages.Mission\"\x13\n\x11SwitchToASDriving\"\x14\n\x12SwitchToASFinished\"\x15\n\x13SwitchToASEmergency\"\x14\n\x12\x46inishedControlLap\"\x12\n\x10\x46inishedFinalLapb\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,])




_EXITMESSAGE = _descriptor.Descriptor(
  name='ExitMessage',
  full_name='TechnionFormulaAV.Messages.ExitMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=58,
  serialized_end=71,
)


_CONNECTIONAPPROVED = _descriptor.Descriptor(
  name='ConnectionApproved',
  full_name='TechnionFormulaAV.Messages.ConnectionApproved',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=93,
)


_SWITCHTOASOFF = _descriptor.Descriptor(
  name='SwitchToASOff',
  full_name='TechnionFormulaAV.Messages.SwitchToASOff',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=95,
  serialized_end=110,
)


_SWITCHTOASDREADY = _descriptor.Descriptor(
  name='SwitchToASDReady',
  full_name='TechnionFormulaAV.Messages.SwitchToASDReady',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mission', full_name='TechnionFormulaAV.Messages.SwitchToASDReady.mission', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=112,
  serialized_end=184,
)


_SWITCHTOASDRIVING = _descriptor.Descriptor(
  name='SwitchToASDriving',
  full_name='TechnionFormulaAV.Messages.SwitchToASDriving',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=186,
  serialized_end=205,
)


_SWITCHTOASFINISHED = _descriptor.Descriptor(
  name='SwitchToASFinished',
  full_name='TechnionFormulaAV.Messages.SwitchToASFinished',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=207,
  serialized_end=227,
)


_SWITCHTOASEMERGENCY = _descriptor.Descriptor(
  name='SwitchToASEmergency',
  full_name='TechnionFormulaAV.Messages.SwitchToASEmergency',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=229,
  serialized_end=250,
)


_FINISHEDCONTROLLAP = _descriptor.Descriptor(
  name='FinishedControlLap',
  full_name='TechnionFormulaAV.Messages.FinishedControlLap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=252,
  serialized_end=272,
)


_FINISHEDFINALLAP = _descriptor.Descriptor(
  name='FinishedFinalLap',
  full_name='TechnionFormulaAV.Messages.FinishedFinalLap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=274,
  serialized_end=292,
)

_SWITCHTOASDREADY.fields_by_name['mission'].enum_type = common__pb2._MISSION
DESCRIPTOR.message_types_by_name['ExitMessage'] = _EXITMESSAGE
DESCRIPTOR.message_types_by_name['ConnectionApproved'] = _CONNECTIONAPPROVED
DESCRIPTOR.message_types_by_name['SwitchToASOff'] = _SWITCHTOASOFF
DESCRIPTOR.message_types_by_name['SwitchToASDReady'] = _SWITCHTOASDREADY
DESCRIPTOR.message_types_by_name['SwitchToASDriving'] = _SWITCHTOASDRIVING
DESCRIPTOR.message_types_by_name['SwitchToASFinished'] = _SWITCHTOASFINISHED
DESCRIPTOR.message_types_by_name['SwitchToASEmergency'] = _SWITCHTOASEMERGENCY
DESCRIPTOR.message_types_by_name['FinishedControlLap'] = _FINISHEDCONTROLLAP
DESCRIPTOR.message_types_by_name['FinishedFinalLap'] = _FINISHEDFINALLAP
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ExitMessage = _reflection.GeneratedProtocolMessageType('ExitMessage', (_message.Message,), {
  'DESCRIPTOR' : _EXITMESSAGE,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.ExitMessage)
  })
_sym_db.RegisterMessage(ExitMessage)

ConnectionApproved = _reflection.GeneratedProtocolMessageType('ConnectionApproved', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTIONAPPROVED,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.ConnectionApproved)
  })
_sym_db.RegisterMessage(ConnectionApproved)

SwitchToASOff = _reflection.GeneratedProtocolMessageType('SwitchToASOff', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHTOASOFF,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.SwitchToASOff)
  })
_sym_db.RegisterMessage(SwitchToASOff)

SwitchToASDReady = _reflection.GeneratedProtocolMessageType('SwitchToASDReady', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHTOASDREADY,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.SwitchToASDReady)
  })
_sym_db.RegisterMessage(SwitchToASDReady)

SwitchToASDriving = _reflection.GeneratedProtocolMessageType('SwitchToASDriving', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHTOASDRIVING,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.SwitchToASDriving)
  })
_sym_db.RegisterMessage(SwitchToASDriving)

SwitchToASFinished = _reflection.GeneratedProtocolMessageType('SwitchToASFinished', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHTOASFINISHED,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.SwitchToASFinished)
  })
_sym_db.RegisterMessage(SwitchToASFinished)

SwitchToASEmergency = _reflection.GeneratedProtocolMessageType('SwitchToASEmergency', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHTOASEMERGENCY,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.SwitchToASEmergency)
  })
_sym_db.RegisterMessage(SwitchToASEmergency)

FinishedControlLap = _reflection.GeneratedProtocolMessageType('FinishedControlLap', (_message.Message,), {
  'DESCRIPTOR' : _FINISHEDCONTROLLAP,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.FinishedControlLap)
  })
_sym_db.RegisterMessage(FinishedControlLap)

FinishedFinalLap = _reflection.GeneratedProtocolMessageType('FinishedFinalLap', (_message.Message,), {
  'DESCRIPTOR' : _FINISHEDFINALLAP,
  '__module__' : 'server_pb2'
  # @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.FinishedFinalLap)
  })
_sym_db.RegisterMessage(FinishedFinalLap)


# @@protoc_insertion_point(module_scope)
