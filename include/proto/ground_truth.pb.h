// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ground_truth.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ground_5ftruth_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ground_5ftruth_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "perception.pb.h"
#include "state_est.pb.h"
#include "sensors.pb.h"
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ground_5ftruth_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ground_5ftruth_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ground_5ftruth_2eproto;
namespace TechnionFormulaAV {
namespace Messages {
class GroundTruth;
class GroundTruthDefaultTypeInternal;
extern GroundTruthDefaultTypeInternal _GroundTruth_default_instance_;
class PerceptionGroundTruth;
class PerceptionGroundTruthDefaultTypeInternal;
extern PerceptionGroundTruthDefaultTypeInternal _PerceptionGroundTruth_default_instance_;
class StateGroundTruth;
class StateGroundTruthDefaultTypeInternal;
extern StateGroundTruthDefaultTypeInternal _StateGroundTruth_default_instance_;
}  // namespace Messages
}  // namespace TechnionFormulaAV
PROTOBUF_NAMESPACE_OPEN
template<> ::TechnionFormulaAV::Messages::GroundTruth* Arena::CreateMaybeMessage<::TechnionFormulaAV::Messages::GroundTruth>(Arena*);
template<> ::TechnionFormulaAV::Messages::PerceptionGroundTruth* Arena::CreateMaybeMessage<::TechnionFormulaAV::Messages::PerceptionGroundTruth>(Arena*);
template<> ::TechnionFormulaAV::Messages::StateGroundTruth* Arena::CreateMaybeMessage<::TechnionFormulaAV::Messages::StateGroundTruth>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TechnionFormulaAV {
namespace Messages {

// ===================================================================

class GroundTruth :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TechnionFormulaAV.Messages.GroundTruth) */ {
 public:
  GroundTruth();
  virtual ~GroundTruth();

  GroundTruth(const GroundTruth& from);
  GroundTruth(GroundTruth&& from) noexcept
    : GroundTruth() {
    *this = ::std::move(from);
  }

  inline GroundTruth& operator=(const GroundTruth& from) {
    CopyFrom(from);
    return *this;
  }
  inline GroundTruth& operator=(GroundTruth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GroundTruth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GroundTruth* internal_default_instance() {
    return reinterpret_cast<const GroundTruth*>(
               &_GroundTruth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(GroundTruth* other);
  friend void swap(GroundTruth& a, GroundTruth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GroundTruth* New() const final {
    return CreateMaybeMessage<GroundTruth>(nullptr);
  }

  GroundTruth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GroundTruth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GroundTruth& from);
  void MergeFrom(const GroundTruth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GroundTruth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TechnionFormulaAV.Messages.GroundTruth";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ground_5ftruth_2eproto);
    return ::descriptor_table_ground_5ftruth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .TechnionFormulaAV.Messages.StateGroundTruth state_ground_truth = 2;
  bool has_state_ground_truth() const;
  void clear_state_ground_truth();
  static const int kStateGroundTruthFieldNumber = 2;
  const ::TechnionFormulaAV::Messages::StateGroundTruth& state_ground_truth() const;
  ::TechnionFormulaAV::Messages::StateGroundTruth* release_state_ground_truth();
  ::TechnionFormulaAV::Messages::StateGroundTruth* mutable_state_ground_truth();
  void set_allocated_state_ground_truth(::TechnionFormulaAV::Messages::StateGroundTruth* state_ground_truth);

  // .TechnionFormulaAV.Messages.PerceptionGroundTruth perception_ground_truth = 3;
  bool has_perception_ground_truth() const;
  void clear_perception_ground_truth();
  static const int kPerceptionGroundTruthFieldNumber = 3;
  const ::TechnionFormulaAV::Messages::PerceptionGroundTruth& perception_ground_truth() const;
  ::TechnionFormulaAV::Messages::PerceptionGroundTruth* release_perception_ground_truth();
  ::TechnionFormulaAV::Messages::PerceptionGroundTruth* mutable_perception_ground_truth();
  void set_allocated_perception_ground_truth(::TechnionFormulaAV::Messages::PerceptionGroundTruth* perception_ground_truth);

  // uint32 frame_number = 1;
  void clear_frame_number();
  static const int kFrameNumberFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 frame_number() const;
  void set_frame_number(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.GroundTruth)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::TechnionFormulaAV::Messages::StateGroundTruth* state_ground_truth_;
  ::TechnionFormulaAV::Messages::PerceptionGroundTruth* perception_ground_truth_;
  ::PROTOBUF_NAMESPACE_ID::uint32 frame_number_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ground_5ftruth_2eproto;
};
// -------------------------------------------------------------------

class StateGroundTruth :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TechnionFormulaAV.Messages.StateGroundTruth) */ {
 public:
  StateGroundTruth();
  virtual ~StateGroundTruth();

  StateGroundTruth(const StateGroundTruth& from);
  StateGroundTruth(StateGroundTruth&& from) noexcept
    : StateGroundTruth() {
    *this = ::std::move(from);
  }

  inline StateGroundTruth& operator=(const StateGroundTruth& from) {
    CopyFrom(from);
    return *this;
  }
  inline StateGroundTruth& operator=(StateGroundTruth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StateGroundTruth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StateGroundTruth* internal_default_instance() {
    return reinterpret_cast<const StateGroundTruth*>(
               &_StateGroundTruth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(StateGroundTruth* other);
  friend void swap(StateGroundTruth& a, StateGroundTruth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StateGroundTruth* New() const final {
    return CreateMaybeMessage<StateGroundTruth>(nullptr);
  }

  StateGroundTruth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StateGroundTruth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StateGroundTruth& from);
  void MergeFrom(const StateGroundTruth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StateGroundTruth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TechnionFormulaAV.Messages.StateGroundTruth";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ground_5ftruth_2eproto);
    return ::descriptor_table_ground_5ftruth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TechnionFormulaAV.Messages.StateCone cones = 8;
  int cones_size() const;
  void clear_cones();
  static const int kConesFieldNumber = 8;
  ::TechnionFormulaAV::Messages::StateCone* mutable_cones(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::StateCone >*
      mutable_cones();
  const ::TechnionFormulaAV::Messages::StateCone& cones(int index) const;
  ::TechnionFormulaAV::Messages::StateCone* add_cones();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::StateCone >&
      cones() const;

  // .TechnionFormulaAV.Messages.Vector3D position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::TechnionFormulaAV::Messages::Vector3D& position() const;
  ::TechnionFormulaAV::Messages::Vector3D* release_position();
  ::TechnionFormulaAV::Messages::Vector3D* mutable_position();
  void set_allocated_position(::TechnionFormulaAV::Messages::Vector3D* position);

  // .TechnionFormulaAV.Messages.CarMeasurments car_measurments = 4;
  bool has_car_measurments() const;
  void clear_car_measurments();
  static const int kCarMeasurmentsFieldNumber = 4;
  const ::TechnionFormulaAV::Messages::CarMeasurments& car_measurments() const;
  ::TechnionFormulaAV::Messages::CarMeasurments* release_car_measurments();
  ::TechnionFormulaAV::Messages::CarMeasurments* mutable_car_measurments();
  void set_allocated_car_measurments(::TechnionFormulaAV::Messages::CarMeasurments* car_measurments);

  // .TechnionFormulaAV.Messages.IMUMeasurments imu_measurments = 6;
  bool has_imu_measurments() const;
  void clear_imu_measurments();
  static const int kImuMeasurmentsFieldNumber = 6;
  const ::TechnionFormulaAV::Messages::IMUMeasurments& imu_measurments() const;
  ::TechnionFormulaAV::Messages::IMUMeasurments* release_imu_measurments();
  ::TechnionFormulaAV::Messages::IMUMeasurments* mutable_imu_measurments();
  void set_allocated_imu_measurments(::TechnionFormulaAV::Messages::IMUMeasurments* imu_measurments);

  // bool has_position_truth = 1;
  void clear_has_position_truth();
  static const int kHasPositionTruthFieldNumber = 1;
  bool has_position_truth() const;
  void set_has_position_truth(bool value);

  // bool has_car_measurments_truth = 3;
  void clear_has_car_measurments_truth();
  static const int kHasCarMeasurmentsTruthFieldNumber = 3;
  bool has_car_measurments_truth() const;
  void set_has_car_measurments_truth(bool value);

  // bool has_imu_measurments_truth = 5;
  void clear_has_imu_measurments_truth();
  static const int kHasImuMeasurmentsTruthFieldNumber = 5;
  bool has_imu_measurments_truth() const;
  void set_has_imu_measurments_truth(bool value);

  // bool has_cones_truth = 7;
  void clear_has_cones_truth();
  static const int kHasConesTruthFieldNumber = 7;
  bool has_cones_truth() const;
  void set_has_cones_truth(bool value);

  // @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.StateGroundTruth)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::StateCone > cones_;
  ::TechnionFormulaAV::Messages::Vector3D* position_;
  ::TechnionFormulaAV::Messages::CarMeasurments* car_measurments_;
  ::TechnionFormulaAV::Messages::IMUMeasurments* imu_measurments_;
  bool has_position_truth_;
  bool has_car_measurments_truth_;
  bool has_imu_measurments_truth_;
  bool has_cones_truth_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ground_5ftruth_2eproto;
};
// -------------------------------------------------------------------

class PerceptionGroundTruth :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TechnionFormulaAV.Messages.PerceptionGroundTruth) */ {
 public:
  PerceptionGroundTruth();
  virtual ~PerceptionGroundTruth();

  PerceptionGroundTruth(const PerceptionGroundTruth& from);
  PerceptionGroundTruth(PerceptionGroundTruth&& from) noexcept
    : PerceptionGroundTruth() {
    *this = ::std::move(from);
  }

  inline PerceptionGroundTruth& operator=(const PerceptionGroundTruth& from) {
    CopyFrom(from);
    return *this;
  }
  inline PerceptionGroundTruth& operator=(PerceptionGroundTruth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PerceptionGroundTruth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerceptionGroundTruth* internal_default_instance() {
    return reinterpret_cast<const PerceptionGroundTruth*>(
               &_PerceptionGroundTruth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PerceptionGroundTruth* other);
  friend void swap(PerceptionGroundTruth& a, PerceptionGroundTruth& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerceptionGroundTruth* New() const final {
    return CreateMaybeMessage<PerceptionGroundTruth>(nullptr);
  }

  PerceptionGroundTruth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PerceptionGroundTruth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PerceptionGroundTruth& from);
  void MergeFrom(const PerceptionGroundTruth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PerceptionGroundTruth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TechnionFormulaAV.Messages.PerceptionGroundTruth";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ground_5ftruth_2eproto);
    return ::descriptor_table_ground_5ftruth_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .TechnionFormulaAV.Messages.BoundingBox bbs = 2;
  int bbs_size() const;
  void clear_bbs();
  static const int kBbsFieldNumber = 2;
  ::TechnionFormulaAV::Messages::BoundingBox* mutable_bbs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::BoundingBox >*
      mutable_bbs();
  const ::TechnionFormulaAV::Messages::BoundingBox& bbs(int index) const;
  ::TechnionFormulaAV::Messages::BoundingBox* add_bbs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::BoundingBox >&
      bbs() const;

  // bool has_bounding_boxes_truth = 1;
  void clear_has_bounding_boxes_truth();
  static const int kHasBoundingBoxesTruthFieldNumber = 1;
  bool has_bounding_boxes_truth() const;
  void set_has_bounding_boxes_truth(bool value);

  // @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.PerceptionGroundTruth)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::BoundingBox > bbs_;
  bool has_bounding_boxes_truth_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ground_5ftruth_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GroundTruth

// uint32 frame_number = 1;
inline void GroundTruth::clear_frame_number() {
  frame_number_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GroundTruth::frame_number() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.GroundTruth.frame_number)
  return frame_number_;
}
inline void GroundTruth::set_frame_number(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  frame_number_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.GroundTruth.frame_number)
}

// .TechnionFormulaAV.Messages.StateGroundTruth state_ground_truth = 2;
inline bool GroundTruth::has_state_ground_truth() const {
  return this != internal_default_instance() && state_ground_truth_ != nullptr;
}
inline void GroundTruth::clear_state_ground_truth() {
  if (GetArenaNoVirtual() == nullptr && state_ground_truth_ != nullptr) {
    delete state_ground_truth_;
  }
  state_ground_truth_ = nullptr;
}
inline const ::TechnionFormulaAV::Messages::StateGroundTruth& GroundTruth::state_ground_truth() const {
  const ::TechnionFormulaAV::Messages::StateGroundTruth* p = state_ground_truth_;
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.GroundTruth.state_ground_truth)
  return p != nullptr ? *p : *reinterpret_cast<const ::TechnionFormulaAV::Messages::StateGroundTruth*>(
      &::TechnionFormulaAV::Messages::_StateGroundTruth_default_instance_);
}
inline ::TechnionFormulaAV::Messages::StateGroundTruth* GroundTruth::release_state_ground_truth() {
  // @@protoc_insertion_point(field_release:TechnionFormulaAV.Messages.GroundTruth.state_ground_truth)
  
  ::TechnionFormulaAV::Messages::StateGroundTruth* temp = state_ground_truth_;
  state_ground_truth_ = nullptr;
  return temp;
}
inline ::TechnionFormulaAV::Messages::StateGroundTruth* GroundTruth::mutable_state_ground_truth() {
  
  if (state_ground_truth_ == nullptr) {
    auto* p = CreateMaybeMessage<::TechnionFormulaAV::Messages::StateGroundTruth>(GetArenaNoVirtual());
    state_ground_truth_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TechnionFormulaAV.Messages.GroundTruth.state_ground_truth)
  return state_ground_truth_;
}
inline void GroundTruth::set_allocated_state_ground_truth(::TechnionFormulaAV::Messages::StateGroundTruth* state_ground_truth) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete state_ground_truth_;
  }
  if (state_ground_truth) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      state_ground_truth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, state_ground_truth, submessage_arena);
    }
    
  } else {
    
  }
  state_ground_truth_ = state_ground_truth;
  // @@protoc_insertion_point(field_set_allocated:TechnionFormulaAV.Messages.GroundTruth.state_ground_truth)
}

// .TechnionFormulaAV.Messages.PerceptionGroundTruth perception_ground_truth = 3;
inline bool GroundTruth::has_perception_ground_truth() const {
  return this != internal_default_instance() && perception_ground_truth_ != nullptr;
}
inline void GroundTruth::clear_perception_ground_truth() {
  if (GetArenaNoVirtual() == nullptr && perception_ground_truth_ != nullptr) {
    delete perception_ground_truth_;
  }
  perception_ground_truth_ = nullptr;
}
inline const ::TechnionFormulaAV::Messages::PerceptionGroundTruth& GroundTruth::perception_ground_truth() const {
  const ::TechnionFormulaAV::Messages::PerceptionGroundTruth* p = perception_ground_truth_;
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.GroundTruth.perception_ground_truth)
  return p != nullptr ? *p : *reinterpret_cast<const ::TechnionFormulaAV::Messages::PerceptionGroundTruth*>(
      &::TechnionFormulaAV::Messages::_PerceptionGroundTruth_default_instance_);
}
inline ::TechnionFormulaAV::Messages::PerceptionGroundTruth* GroundTruth::release_perception_ground_truth() {
  // @@protoc_insertion_point(field_release:TechnionFormulaAV.Messages.GroundTruth.perception_ground_truth)
  
  ::TechnionFormulaAV::Messages::PerceptionGroundTruth* temp = perception_ground_truth_;
  perception_ground_truth_ = nullptr;
  return temp;
}
inline ::TechnionFormulaAV::Messages::PerceptionGroundTruth* GroundTruth::mutable_perception_ground_truth() {
  
  if (perception_ground_truth_ == nullptr) {
    auto* p = CreateMaybeMessage<::TechnionFormulaAV::Messages::PerceptionGroundTruth>(GetArenaNoVirtual());
    perception_ground_truth_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TechnionFormulaAV.Messages.GroundTruth.perception_ground_truth)
  return perception_ground_truth_;
}
inline void GroundTruth::set_allocated_perception_ground_truth(::TechnionFormulaAV::Messages::PerceptionGroundTruth* perception_ground_truth) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete perception_ground_truth_;
  }
  if (perception_ground_truth) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      perception_ground_truth = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, perception_ground_truth, submessage_arena);
    }
    
  } else {
    
  }
  perception_ground_truth_ = perception_ground_truth;
  // @@protoc_insertion_point(field_set_allocated:TechnionFormulaAV.Messages.GroundTruth.perception_ground_truth)
}

// -------------------------------------------------------------------

// StateGroundTruth

// bool has_position_truth = 1;
inline void StateGroundTruth::clear_has_position_truth() {
  has_position_truth_ = false;
}
inline bool StateGroundTruth::has_position_truth() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.has_position_truth)
  return has_position_truth_;
}
inline void StateGroundTruth::set_has_position_truth(bool value) {
  
  has_position_truth_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.StateGroundTruth.has_position_truth)
}

// .TechnionFormulaAV.Messages.Vector3D position = 2;
inline bool StateGroundTruth::has_position() const {
  return this != internal_default_instance() && position_ != nullptr;
}
inline const ::TechnionFormulaAV::Messages::Vector3D& StateGroundTruth::position() const {
  const ::TechnionFormulaAV::Messages::Vector3D* p = position_;
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.position)
  return p != nullptr ? *p : *reinterpret_cast<const ::TechnionFormulaAV::Messages::Vector3D*>(
      &::TechnionFormulaAV::Messages::_Vector3D_default_instance_);
}
inline ::TechnionFormulaAV::Messages::Vector3D* StateGroundTruth::release_position() {
  // @@protoc_insertion_point(field_release:TechnionFormulaAV.Messages.StateGroundTruth.position)
  
  ::TechnionFormulaAV::Messages::Vector3D* temp = position_;
  position_ = nullptr;
  return temp;
}
inline ::TechnionFormulaAV::Messages::Vector3D* StateGroundTruth::mutable_position() {
  
  if (position_ == nullptr) {
    auto* p = CreateMaybeMessage<::TechnionFormulaAV::Messages::Vector3D>(GetArenaNoVirtual());
    position_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TechnionFormulaAV.Messages.StateGroundTruth.position)
  return position_;
}
inline void StateGroundTruth::set_allocated_position(::TechnionFormulaAV::Messages::Vector3D* position) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(position_);
  }
  if (position) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      position = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:TechnionFormulaAV.Messages.StateGroundTruth.position)
}

// bool has_car_measurments_truth = 3;
inline void StateGroundTruth::clear_has_car_measurments_truth() {
  has_car_measurments_truth_ = false;
}
inline bool StateGroundTruth::has_car_measurments_truth() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.has_car_measurments_truth)
  return has_car_measurments_truth_;
}
inline void StateGroundTruth::set_has_car_measurments_truth(bool value) {
  
  has_car_measurments_truth_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.StateGroundTruth.has_car_measurments_truth)
}

// .TechnionFormulaAV.Messages.CarMeasurments car_measurments = 4;
inline bool StateGroundTruth::has_car_measurments() const {
  return this != internal_default_instance() && car_measurments_ != nullptr;
}
inline const ::TechnionFormulaAV::Messages::CarMeasurments& StateGroundTruth::car_measurments() const {
  const ::TechnionFormulaAV::Messages::CarMeasurments* p = car_measurments_;
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.car_measurments)
  return p != nullptr ? *p : *reinterpret_cast<const ::TechnionFormulaAV::Messages::CarMeasurments*>(
      &::TechnionFormulaAV::Messages::_CarMeasurments_default_instance_);
}
inline ::TechnionFormulaAV::Messages::CarMeasurments* StateGroundTruth::release_car_measurments() {
  // @@protoc_insertion_point(field_release:TechnionFormulaAV.Messages.StateGroundTruth.car_measurments)
  
  ::TechnionFormulaAV::Messages::CarMeasurments* temp = car_measurments_;
  car_measurments_ = nullptr;
  return temp;
}
inline ::TechnionFormulaAV::Messages::CarMeasurments* StateGroundTruth::mutable_car_measurments() {
  
  if (car_measurments_ == nullptr) {
    auto* p = CreateMaybeMessage<::TechnionFormulaAV::Messages::CarMeasurments>(GetArenaNoVirtual());
    car_measurments_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TechnionFormulaAV.Messages.StateGroundTruth.car_measurments)
  return car_measurments_;
}
inline void StateGroundTruth::set_allocated_car_measurments(::TechnionFormulaAV::Messages::CarMeasurments* car_measurments) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(car_measurments_);
  }
  if (car_measurments) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      car_measurments = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, car_measurments, submessage_arena);
    }
    
  } else {
    
  }
  car_measurments_ = car_measurments;
  // @@protoc_insertion_point(field_set_allocated:TechnionFormulaAV.Messages.StateGroundTruth.car_measurments)
}

// bool has_imu_measurments_truth = 5;
inline void StateGroundTruth::clear_has_imu_measurments_truth() {
  has_imu_measurments_truth_ = false;
}
inline bool StateGroundTruth::has_imu_measurments_truth() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.has_imu_measurments_truth)
  return has_imu_measurments_truth_;
}
inline void StateGroundTruth::set_has_imu_measurments_truth(bool value) {
  
  has_imu_measurments_truth_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.StateGroundTruth.has_imu_measurments_truth)
}

// .TechnionFormulaAV.Messages.IMUMeasurments imu_measurments = 6;
inline bool StateGroundTruth::has_imu_measurments() const {
  return this != internal_default_instance() && imu_measurments_ != nullptr;
}
inline const ::TechnionFormulaAV::Messages::IMUMeasurments& StateGroundTruth::imu_measurments() const {
  const ::TechnionFormulaAV::Messages::IMUMeasurments* p = imu_measurments_;
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.imu_measurments)
  return p != nullptr ? *p : *reinterpret_cast<const ::TechnionFormulaAV::Messages::IMUMeasurments*>(
      &::TechnionFormulaAV::Messages::_IMUMeasurments_default_instance_);
}
inline ::TechnionFormulaAV::Messages::IMUMeasurments* StateGroundTruth::release_imu_measurments() {
  // @@protoc_insertion_point(field_release:TechnionFormulaAV.Messages.StateGroundTruth.imu_measurments)
  
  ::TechnionFormulaAV::Messages::IMUMeasurments* temp = imu_measurments_;
  imu_measurments_ = nullptr;
  return temp;
}
inline ::TechnionFormulaAV::Messages::IMUMeasurments* StateGroundTruth::mutable_imu_measurments() {
  
  if (imu_measurments_ == nullptr) {
    auto* p = CreateMaybeMessage<::TechnionFormulaAV::Messages::IMUMeasurments>(GetArenaNoVirtual());
    imu_measurments_ = p;
  }
  // @@protoc_insertion_point(field_mutable:TechnionFormulaAV.Messages.StateGroundTruth.imu_measurments)
  return imu_measurments_;
}
inline void StateGroundTruth::set_allocated_imu_measurments(::TechnionFormulaAV::Messages::IMUMeasurments* imu_measurments) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(imu_measurments_);
  }
  if (imu_measurments) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      imu_measurments = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, imu_measurments, submessage_arena);
    }
    
  } else {
    
  }
  imu_measurments_ = imu_measurments;
  // @@protoc_insertion_point(field_set_allocated:TechnionFormulaAV.Messages.StateGroundTruth.imu_measurments)
}

// bool has_cones_truth = 7;
inline void StateGroundTruth::clear_has_cones_truth() {
  has_cones_truth_ = false;
}
inline bool StateGroundTruth::has_cones_truth() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.has_cones_truth)
  return has_cones_truth_;
}
inline void StateGroundTruth::set_has_cones_truth(bool value) {
  
  has_cones_truth_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.StateGroundTruth.has_cones_truth)
}

// repeated .TechnionFormulaAV.Messages.StateCone cones = 8;
inline int StateGroundTruth::cones_size() const {
  return cones_.size();
}
inline ::TechnionFormulaAV::Messages::StateCone* StateGroundTruth::mutable_cones(int index) {
  // @@protoc_insertion_point(field_mutable:TechnionFormulaAV.Messages.StateGroundTruth.cones)
  return cones_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::StateCone >*
StateGroundTruth::mutable_cones() {
  // @@protoc_insertion_point(field_mutable_list:TechnionFormulaAV.Messages.StateGroundTruth.cones)
  return &cones_;
}
inline const ::TechnionFormulaAV::Messages::StateCone& StateGroundTruth::cones(int index) const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.StateGroundTruth.cones)
  return cones_.Get(index);
}
inline ::TechnionFormulaAV::Messages::StateCone* StateGroundTruth::add_cones() {
  // @@protoc_insertion_point(field_add:TechnionFormulaAV.Messages.StateGroundTruth.cones)
  return cones_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::StateCone >&
StateGroundTruth::cones() const {
  // @@protoc_insertion_point(field_list:TechnionFormulaAV.Messages.StateGroundTruth.cones)
  return cones_;
}

// -------------------------------------------------------------------

// PerceptionGroundTruth

// bool has_bounding_boxes_truth = 1;
inline void PerceptionGroundTruth::clear_has_bounding_boxes_truth() {
  has_bounding_boxes_truth_ = false;
}
inline bool PerceptionGroundTruth::has_bounding_boxes_truth() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.PerceptionGroundTruth.has_bounding_boxes_truth)
  return has_bounding_boxes_truth_;
}
inline void PerceptionGroundTruth::set_has_bounding_boxes_truth(bool value) {
  
  has_bounding_boxes_truth_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.PerceptionGroundTruth.has_bounding_boxes_truth)
}

// repeated .TechnionFormulaAV.Messages.BoundingBox bbs = 2;
inline int PerceptionGroundTruth::bbs_size() const {
  return bbs_.size();
}
inline ::TechnionFormulaAV::Messages::BoundingBox* PerceptionGroundTruth::mutable_bbs(int index) {
  // @@protoc_insertion_point(field_mutable:TechnionFormulaAV.Messages.PerceptionGroundTruth.bbs)
  return bbs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::BoundingBox >*
PerceptionGroundTruth::mutable_bbs() {
  // @@protoc_insertion_point(field_mutable_list:TechnionFormulaAV.Messages.PerceptionGroundTruth.bbs)
  return &bbs_;
}
inline const ::TechnionFormulaAV::Messages::BoundingBox& PerceptionGroundTruth::bbs(int index) const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.PerceptionGroundTruth.bbs)
  return bbs_.Get(index);
}
inline ::TechnionFormulaAV::Messages::BoundingBox* PerceptionGroundTruth::add_bbs() {
  // @@protoc_insertion_point(field_add:TechnionFormulaAV.Messages.PerceptionGroundTruth.bbs)
  return bbs_.Add();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TechnionFormulaAV::Messages::BoundingBox >&
PerceptionGroundTruth::bbs() const {
  // @@protoc_insertion_point(field_list:TechnionFormulaAV.Messages.PerceptionGroundTruth.bbs)
  return bbs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace TechnionFormulaAV

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ground_5ftruth_2eproto
