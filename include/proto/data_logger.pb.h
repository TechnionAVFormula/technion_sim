// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data_logger.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_data_5flogger_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_data_5flogger_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "common.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_data_5flogger_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_data_5flogger_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_data_5flogger_2eproto;
namespace TechnionFormulaAV {
namespace Messages {
class DrivingDynamics1;
class DrivingDynamics1DefaultTypeInternal;
extern DrivingDynamics1DefaultTypeInternal _DrivingDynamics1_default_instance_;
class DrivingDynamics2;
class DrivingDynamics2DefaultTypeInternal;
extern DrivingDynamics2DefaultTypeInternal _DrivingDynamics2_default_instance_;
class SystemStatus;
class SystemStatusDefaultTypeInternal;
extern SystemStatusDefaultTypeInternal _SystemStatus_default_instance_;
}  // namespace Messages
}  // namespace TechnionFormulaAV
PROTOBUF_NAMESPACE_OPEN
template<> ::TechnionFormulaAV::Messages::DrivingDynamics1* Arena::CreateMaybeMessage<::TechnionFormulaAV::Messages::DrivingDynamics1>(Arena*);
template<> ::TechnionFormulaAV::Messages::DrivingDynamics2* Arena::CreateMaybeMessage<::TechnionFormulaAV::Messages::DrivingDynamics2>(Arena*);
template<> ::TechnionFormulaAV::Messages::SystemStatus* Arena::CreateMaybeMessage<::TechnionFormulaAV::Messages::SystemStatus>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace TechnionFormulaAV {
namespace Messages {

// ===================================================================

class DrivingDynamics1 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TechnionFormulaAV.Messages.DrivingDynamics1) */ {
 public:
  DrivingDynamics1();
  virtual ~DrivingDynamics1();

  DrivingDynamics1(const DrivingDynamics1& from);
  DrivingDynamics1(DrivingDynamics1&& from) noexcept
    : DrivingDynamics1() {
    *this = ::std::move(from);
  }

  inline DrivingDynamics1& operator=(const DrivingDynamics1& from) {
    CopyFrom(from);
    return *this;
  }
  inline DrivingDynamics1& operator=(DrivingDynamics1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DrivingDynamics1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrivingDynamics1* internal_default_instance() {
    return reinterpret_cast<const DrivingDynamics1*>(
               &_DrivingDynamics1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(DrivingDynamics1* other);
  friend void swap(DrivingDynamics1& a, DrivingDynamics1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrivingDynamics1* New() const final {
    return CreateMaybeMessage<DrivingDynamics1>(nullptr);
  }

  DrivingDynamics1* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DrivingDynamics1>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DrivingDynamics1& from);
  void MergeFrom(const DrivingDynamics1& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DrivingDynamics1* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TechnionFormulaAV.Messages.DrivingDynamics1";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5flogger_2eproto);
    return ::descriptor_table_data_5flogger_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 speed_actual = 1;
  void clear_speed_actual();
  static const int kSpeedActualFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 speed_actual() const;
  void set_speed_actual(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 speed_target = 2;
  void clear_speed_target();
  static const int kSpeedTargetFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 speed_target() const;
  void set_speed_target(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 steering_angle_actual = 3;
  void clear_steering_angle_actual();
  static const int kSteeringAngleActualFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 steering_angle_actual() const;
  void set_steering_angle_actual(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 steering_angle_target = 4;
  void clear_steering_angle_target();
  static const int kSteeringAngleTargetFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 steering_angle_target() const;
  void set_steering_angle_target(::PROTOBUF_NAMESPACE_ID::int32 value);

  // uint32 brake_hydr_actual = 5;
  void clear_brake_hydr_actual();
  static const int kBrakeHydrActualFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_hydr_actual() const;
  void set_brake_hydr_actual(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 brake_hydr_target = 6;
  void clear_brake_hydr_target();
  static const int kBrakeHydrTargetFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_hydr_target() const;
  void set_brake_hydr_target(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 motor_moment_actual = 7;
  void clear_motor_moment_actual();
  static const int kMotorMomentActualFieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::int32 motor_moment_actual() const;
  void set_motor_moment_actual(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 motor_moment_target = 8;
  void clear_motor_moment_target();
  static const int kMotorMomentTargetFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 motor_moment_target() const;
  void set_motor_moment_target(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.DrivingDynamics1)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 speed_actual_;
  ::PROTOBUF_NAMESPACE_ID::uint32 speed_target_;
  ::PROTOBUF_NAMESPACE_ID::int32 steering_angle_actual_;
  ::PROTOBUF_NAMESPACE_ID::int32 steering_angle_target_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_hydr_actual_;
  ::PROTOBUF_NAMESPACE_ID::uint32 brake_hydr_target_;
  ::PROTOBUF_NAMESPACE_ID::int32 motor_moment_actual_;
  ::PROTOBUF_NAMESPACE_ID::int32 motor_moment_target_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5flogger_2eproto;
};
// -------------------------------------------------------------------

class DrivingDynamics2 :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TechnionFormulaAV.Messages.DrivingDynamics2) */ {
 public:
  DrivingDynamics2();
  virtual ~DrivingDynamics2();

  DrivingDynamics2(const DrivingDynamics2& from);
  DrivingDynamics2(DrivingDynamics2&& from) noexcept
    : DrivingDynamics2() {
    *this = ::std::move(from);
  }

  inline DrivingDynamics2& operator=(const DrivingDynamics2& from) {
    CopyFrom(from);
    return *this;
  }
  inline DrivingDynamics2& operator=(DrivingDynamics2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DrivingDynamics2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DrivingDynamics2* internal_default_instance() {
    return reinterpret_cast<const DrivingDynamics2*>(
               &_DrivingDynamics2_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DrivingDynamics2* other);
  friend void swap(DrivingDynamics2& a, DrivingDynamics2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DrivingDynamics2* New() const final {
    return CreateMaybeMessage<DrivingDynamics2>(nullptr);
  }

  DrivingDynamics2* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DrivingDynamics2>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DrivingDynamics2& from);
  void MergeFrom(const DrivingDynamics2& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DrivingDynamics2* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TechnionFormulaAV.Messages.DrivingDynamics2";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5flogger_2eproto);
    return ::descriptor_table_data_5flogger_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 acceleration_longitude = 1;
  void clear_acceleration_longitude();
  static const int kAccelerationLongitudeFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 acceleration_longitude() const;
  void set_acceleration_longitude(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 acceleration_lateral = 2;
  void clear_acceleration_lateral();
  static const int kAccelerationLateralFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 acceleration_lateral() const;
  void set_acceleration_lateral(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 yaw_rate = 3;
  void clear_yaw_rate();
  static const int kYawRateFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 yaw_rate() const;
  void set_yaw_rate(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.DrivingDynamics2)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 acceleration_longitude_;
  ::PROTOBUF_NAMESPACE_ID::int32 acceleration_lateral_;
  ::PROTOBUF_NAMESPACE_ID::int32 yaw_rate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5flogger_2eproto;
};
// -------------------------------------------------------------------

class SystemStatus :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:TechnionFormulaAV.Messages.SystemStatus) */ {
 public:
  SystemStatus();
  virtual ~SystemStatus();

  SystemStatus(const SystemStatus& from);
  SystemStatus(SystemStatus&& from) noexcept
    : SystemStatus() {
    *this = ::std::move(from);
  }

  inline SystemStatus& operator=(const SystemStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemStatus& operator=(SystemStatus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemStatus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemStatus* internal_default_instance() {
    return reinterpret_cast<const SystemStatus*>(
               &_SystemStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(SystemStatus* other);
  friend void swap(SystemStatus& a, SystemStatus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SystemStatus* New() const final {
    return CreateMaybeMessage<SystemStatus>(nullptr);
  }

  SystemStatus* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemStatus>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemStatus& from);
  void MergeFrom(const SystemStatus& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemStatus* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "TechnionFormulaAV.Messages.SystemStatus";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_data_5flogger_2eproto);
    return ::descriptor_table_data_5flogger_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 as_state = 1;
  void clear_as_state();
  static const int kAsStateFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 as_state() const;
  void set_as_state(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 ebs_state = 2;
  void clear_ebs_state();
  static const int kEbsStateFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 ebs_state() const;
  void set_ebs_state(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 ami_state = 3;
  void clear_ami_state();
  static const int kAmiStateFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::uint32 ami_state() const;
  void set_ami_state(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 steering_state = 4;
  void clear_steering_state();
  static const int kSteeringStateFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::uint32 steering_state() const;
  void set_steering_state(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 service_brake_state = 5;
  void clear_service_brake_state();
  static const int kServiceBrakeStateFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_brake_state() const;
  void set_service_brake_state(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 lap_counter = 6;
  void clear_lap_counter();
  static const int kLapCounterFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::uint32 lap_counter() const;
  void set_lap_counter(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 cones_count_actual = 7;
  void clear_cones_count_actual();
  static const int kConesCountActualFieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::uint32 cones_count_actual() const;
  void set_cones_count_actual(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 cones_count_all = 8;
  void clear_cones_count_all();
  static const int kConesCountAllFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::uint32 cones_count_all() const;
  void set_cones_count_all(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:TechnionFormulaAV.Messages.SystemStatus)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 as_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ebs_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ami_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 steering_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 service_brake_state_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lap_counter_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cones_count_actual_;
  ::PROTOBUF_NAMESPACE_ID::uint32 cones_count_all_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_data_5flogger_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// DrivingDynamics1

// uint32 speed_actual = 1;
inline void DrivingDynamics1::clear_speed_actual() {
  speed_actual_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DrivingDynamics1::speed_actual() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.speed_actual)
  return speed_actual_;
}
inline void DrivingDynamics1::set_speed_actual(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  speed_actual_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.speed_actual)
}

// uint32 speed_target = 2;
inline void DrivingDynamics1::clear_speed_target() {
  speed_target_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DrivingDynamics1::speed_target() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.speed_target)
  return speed_target_;
}
inline void DrivingDynamics1::set_speed_target(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  speed_target_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.speed_target)
}

// int32 steering_angle_actual = 3;
inline void DrivingDynamics1::clear_steering_angle_actual() {
  steering_angle_actual_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DrivingDynamics1::steering_angle_actual() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.steering_angle_actual)
  return steering_angle_actual_;
}
inline void DrivingDynamics1::set_steering_angle_actual(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  steering_angle_actual_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.steering_angle_actual)
}

// int32 steering_angle_target = 4;
inline void DrivingDynamics1::clear_steering_angle_target() {
  steering_angle_target_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DrivingDynamics1::steering_angle_target() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.steering_angle_target)
  return steering_angle_target_;
}
inline void DrivingDynamics1::set_steering_angle_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  steering_angle_target_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.steering_angle_target)
}

// uint32 brake_hydr_actual = 5;
inline void DrivingDynamics1::clear_brake_hydr_actual() {
  brake_hydr_actual_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DrivingDynamics1::brake_hydr_actual() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.brake_hydr_actual)
  return brake_hydr_actual_;
}
inline void DrivingDynamics1::set_brake_hydr_actual(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  brake_hydr_actual_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.brake_hydr_actual)
}

// uint32 brake_hydr_target = 6;
inline void DrivingDynamics1::clear_brake_hydr_target() {
  brake_hydr_target_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 DrivingDynamics1::brake_hydr_target() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.brake_hydr_target)
  return brake_hydr_target_;
}
inline void DrivingDynamics1::set_brake_hydr_target(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  brake_hydr_target_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.brake_hydr_target)
}

// int32 motor_moment_actual = 7;
inline void DrivingDynamics1::clear_motor_moment_actual() {
  motor_moment_actual_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DrivingDynamics1::motor_moment_actual() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.motor_moment_actual)
  return motor_moment_actual_;
}
inline void DrivingDynamics1::set_motor_moment_actual(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  motor_moment_actual_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.motor_moment_actual)
}

// int32 motor_moment_target = 8;
inline void DrivingDynamics1::clear_motor_moment_target() {
  motor_moment_target_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DrivingDynamics1::motor_moment_target() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics1.motor_moment_target)
  return motor_moment_target_;
}
inline void DrivingDynamics1::set_motor_moment_target(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  motor_moment_target_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics1.motor_moment_target)
}

// -------------------------------------------------------------------

// DrivingDynamics2

// int32 acceleration_longitude = 1;
inline void DrivingDynamics2::clear_acceleration_longitude() {
  acceleration_longitude_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DrivingDynamics2::acceleration_longitude() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics2.acceleration_longitude)
  return acceleration_longitude_;
}
inline void DrivingDynamics2::set_acceleration_longitude(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  acceleration_longitude_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics2.acceleration_longitude)
}

// int32 acceleration_lateral = 2;
inline void DrivingDynamics2::clear_acceleration_lateral() {
  acceleration_lateral_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DrivingDynamics2::acceleration_lateral() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics2.acceleration_lateral)
  return acceleration_lateral_;
}
inline void DrivingDynamics2::set_acceleration_lateral(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  acceleration_lateral_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics2.acceleration_lateral)
}

// int32 yaw_rate = 3;
inline void DrivingDynamics2::clear_yaw_rate() {
  yaw_rate_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DrivingDynamics2::yaw_rate() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.DrivingDynamics2.yaw_rate)
  return yaw_rate_;
}
inline void DrivingDynamics2::set_yaw_rate(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  yaw_rate_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.DrivingDynamics2.yaw_rate)
}

// -------------------------------------------------------------------

// SystemStatus

// uint32 as_state = 1;
inline void SystemStatus::clear_as_state() {
  as_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::as_state() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.as_state)
  return as_state_;
}
inline void SystemStatus::set_as_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  as_state_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.as_state)
}

// uint32 ebs_state = 2;
inline void SystemStatus::clear_ebs_state() {
  ebs_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::ebs_state() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.ebs_state)
  return ebs_state_;
}
inline void SystemStatus::set_ebs_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ebs_state_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.ebs_state)
}

// uint32 ami_state = 3;
inline void SystemStatus::clear_ami_state() {
  ami_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::ami_state() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.ami_state)
  return ami_state_;
}
inline void SystemStatus::set_ami_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ami_state_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.ami_state)
}

// uint32 steering_state = 4;
inline void SystemStatus::clear_steering_state() {
  steering_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::steering_state() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.steering_state)
  return steering_state_;
}
inline void SystemStatus::set_steering_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  steering_state_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.steering_state)
}

// uint32 service_brake_state = 5;
inline void SystemStatus::clear_service_brake_state() {
  service_brake_state_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::service_brake_state() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.service_brake_state)
  return service_brake_state_;
}
inline void SystemStatus::set_service_brake_state(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  service_brake_state_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.service_brake_state)
}

// uint32 lap_counter = 6;
inline void SystemStatus::clear_lap_counter() {
  lap_counter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::lap_counter() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.lap_counter)
  return lap_counter_;
}
inline void SystemStatus::set_lap_counter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lap_counter_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.lap_counter)
}

// uint32 cones_count_actual = 7;
inline void SystemStatus::clear_cones_count_actual() {
  cones_count_actual_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::cones_count_actual() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.cones_count_actual)
  return cones_count_actual_;
}
inline void SystemStatus::set_cones_count_actual(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cones_count_actual_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.cones_count_actual)
}

// uint32 cones_count_all = 8;
inline void SystemStatus::clear_cones_count_all() {
  cones_count_all_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemStatus::cones_count_all() const {
  // @@protoc_insertion_point(field_get:TechnionFormulaAV.Messages.SystemStatus.cones_count_all)
  return cones_count_all_;
}
inline void SystemStatus::set_cones_count_all(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  cones_count_all_ = value;
  // @@protoc_insertion_point(field_set:TechnionFormulaAV.Messages.SystemStatus.cones_count_all)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Messages
}  // namespace TechnionFormulaAV

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_data_5flogger_2eproto
